return {
  "AstroNvim/astrolsp",
  ---@param opts AstroLSPOpts
  opts = function(_, opts)
    require("astrocore").extend_tbl(opts.config, {
      gopls = {
        filetypes = { "go", "gosum", "gomod", "gowork", "gotmpl" },
        settings = {
          gopls = {
            analyses = {
              appends = true,
              asmdecl = true,
              assign = true,
              atomic = true,
              atomicalign = true,
              bools = true,
              buildtag = true,
              cgocall = true,
              composites = true,
              copylocks = true,
              deepequalerrors = true,
              defers = true,
              deprecated = true,
              directive = true,
              embed = true,
              errorsas = true,
              fieldalignment = false,
              fillstruct = true,
              fillreturns = true,
              httpresponse = true,
              ifaceassert = true,
              infertypeargs = true,
              loopclosure = true,
              lostcancel = false,
              nilfunc = true,
              nilness = true,
              nonewvars = true,
              noresultvalues = true,
              printf = true,
              shadow = true,
              shift = true,
              simplifycompositelit = true,
              simplifyrange = true,
              simplifyslice = true,
              slog = true,
              sortslice = true,
              stdmethods = true,
              stdversion = true,
              stringintconv = true,
              structtag = true,
              stubmethods = true,
              testinggoroutine = true,
              tests = true,
              timeformat = true,
              undeclaredname = true,
              unmarshal = true,
              unreachable = true,
              unusedvariable = true,
              unsafeptr = true,
              unusedparams = true,
              unusedresult = true,
              unusedwrite = true,
              useany = true,
            },
            usePlaceholders = true,
            gofumpt = true,
            staticcheck = true,
            annotations = {
              bounds = true,
              escape = true,
              inline = true,
              ["nil"] = true,
            },
            codelenses = {
              gc_details = false,
              generate = false,
              regenerate_cgo = false,
              run_govulncheck = false,
              test = false,
              tidy = true,
              upgrade_dependency = false,
              vendor = false,
            },
            vulncheck = "Off",
            importShortcut = "Definition",
            hints = {
              -- assignVariableTypes = true,
              compositeLiteralFields = true,
              -- compositeLiteralTypes = true,
              constantValues = true,
              -- functionTypeParameters = true,
              parameterNames = true,
              -- rangeVariableTypes = true,
            },
            diagnosticsTrigger = "Save",
            analysisProgressReporting = true,
            hoverKind = "FullDocumentation",
            semanticTokens = true,
            noSemanticString = true,
            noSemanticNumber = true,
            symbolMatcher = "FastFuzzy",
            allExperiments = true,
            completeUnimported = true,
          },
        },
      },
    })
  end,
}
